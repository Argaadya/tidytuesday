##Order data by rating
data_country <- data_country[order(data_country$rating),]
data_country$country <- factor(x = data_country$country,levels = data_country$country)
ggplot(data_country,aes(country,rating))+geom_col()
ggplot(data_country,aes(country,rating))+geom_col()+coord_flip()
ggplot(data_country,aes(rating,country))+geom_col()
ggplot(data_country,aes(country,rating))+geom_col()+coord_flip()
##Draw Bar Chart
ggplot(data_country,aes(country,rating))+geom_col()
##Draw Bar Chart
ggplot(data_country,aes(country,rating))+geom_col()+coord_flip()
##Draw Bar Chart
ggplot(data_country,aes(country,rating))+geom_col()+coord_flip()
##Order data by jumlah
data_country <- data_country[order(data_country$jumlah),]
data_country$country <- factor(x = data_country$country,levels = data_country$country)
##Draw Bar Chart
ggplot(data_country,aes(country,rating))+geom_col()+coord_flip()
##Order data by jumlah
data_country <- data_country[order(data_country$jumlah),]
data_country$country <- factor(x = data_country$country,levels = data_country$country)
##Draw Bar Chart
ggplot(data_country,aes(country,jumlah))+geom_col()+coord_flip()
ggplot(data,aes(country,stars))+geom_violin()
ggplot(data,aes(y=stars))+geom_violin()
ggplot(data,aes(x="rating",y=stars))+geom_violin()
#Make Lollipop Chart -----------------------------------------------------
##Grouping data by country
data_country <- data %>% group_by(country) %>%
summarise(jumlah = n(), rating = mean(stars))
##Order data by rating
data_country <- data_country[order(data_country$rating),]
data_country$country <- factor(x = data_country$country,levels = data_country$country)
##Draw Bar Chart
ggplot(data_country,aes(country,rating))+
geom_point()+
geom_segment(aes(x=country,xend=country,y=0,yend=rating))+
coord_flip()
ggplot(data,aes(country,y=stars))+geom_boxplot()
ggplot(data,aes(country,y=stars))+geom_boxplot()+coord_flip()
#Make Boxplot -------------------------------------------------------
##Grouping data by country
data_country <- data %>% group_by(country) %>%
summarise(jumlah = n(), rating = mean(stars))
##Order data by rating
data_country <- data_country[order(data_country$rating),]
data_country$country <- factor(x = data_country$country,levels = data_country$country)
##Draw Boxplot
ggplot(data,aes(country,y=stars))+geom_boxplot()+coord_flip()
##Order data by rating
data_country <- data_country[order(data_country$rating),]
data_country$country <- factor(x = data_country$country,levels = data_country$country)
##Draw Lollipop Chart
ggplot(data_country,aes(country,rating))+
geom_point()+
geom_segment(aes(x=country,xend=country,y=0,yend=rating))+
coord_flip()
data$country <- factor(data$country,data_country$country)
##Draw Boxplot
ggplot(data,aes(country,y=stars))+geom_boxplot()+coord_flip()
##Draw Boxplot Data Cumulative
ggplot(data,aes(x="Rating",y=stars))+geom_boxplot()+coord_flip()
##Draw Boxplot Data Cumulative
ggplot(data,aes(x="Rating",y=stars))+geom_boxplot()
##Draw Boxplot Data Cumulative
ggplot(data,aes(x="",y=stars))+geom_boxplot()
##Draw Boxplot Data Cumulative
ggplot(data,aes(x="Rating",y=stars))+geom_boxplot()
##Order data by rating
data_country <- data_country[order(data_country$rating),]
data$country <- factor(data$country,data_country$country)
##Draw Boxplot Data Cumulative
ggplot(data,aes(x="Rating",y=stars))+geom_boxplot()
##Draw Boxplot Data per Country
ggplot(data,aes(country,y=stars))+geom_boxplot()+coord_flip()
##Draw Boxplot Data per Country
ggplot(data,aes(country,y=stars))+geom_boxplot()+coord_flip()
##Look for Outlier
data_box <- boxplot(data$stars)
data_box
unique(data_box$out)
##Delete Outlier
data2 <- data[which(data$stars>data_box$stats[1] & data$stars<data_box$stats[5]),]
ggplot(data2,aes("rating",y=stars))+geom_boxplot()+coord_flip()
##Delete Outlier
data2 <- data[which(data$stars>data_box$stats[1] & data$stars<data_box$stats[5]),]
ggplot(data2,aes("rating",y=stars))+geom_boxplot()
dim(data)
dim(data2)
head(data)
ggplot(data,aes(brand,y=stars))+geom_boxplot()+coord_flip()
dev.off()
#Make Violin Chart -----------------------------------------------------
##Draw Violin Chart
ggplot(data,aes(x="Rating",y=stars))+geom_boxplot()
#Make Violin Chart -----------------------------------------------------
##Draw Violin Chart
ggplot(data,aes(x="Rating",y=stars))+geom_violin()
ggplot(data,aes(x=country,y=stars))+geom_violin()+coord_flip()
#Make Histogram -----------------------------------------------------
##Draw Histogram
ggplot(data,aes(x=stars))+geom_histogram()
ggplot(data,aes(x=stars))+geom_histogram(bins = 50)
#Make Density Plot -----------------------------------------------------
##Draw Density
ggplot(data,aes(x=stars))+geom_density()
#Make Density Plot -----------------------------------------------------
##Draw Density
ggplot(data,aes(x=stars))+geom_density()
##Draw Area
ggplot(data,aes(x=stars))+geom_area()
##Draw Area
ggplot(data,aes(y=stars))+geom_area()
##Draw Area
ggplot(data,aes(x="rating",y=stars))+geom_area()
##Draw Area
ggplot(data,aes(y="rating",x=stars))+geom_area()
##Draw Area
ggplot(data,aes(x=country,y=stars))+geom_area()
##Draw Area
ggplot(data,aes(y=stars))+geom_area()
##Draw Area
ggplot(data,aes(x="rating",y=stars))+geom_area()
##Draw Area
ggplot(data,aes(x="rating",y=stars))+geom_area()+coord_flip()
##Draw Area
ggplot(data,aes(y="rating",x=stars))+geom_area()
##Draw Area
ggplot(data,aes(x=country,y=stars))+geom_density_ridges()
##Draw Area
ggplot(data,aes(x=country,y=stars))+geom_density_ridges(y=stars)
##Draw Area
ggplot(data,aes(x=country,y=stars))+geom_density_ridges(mapping = aes(y=stars))
ggplot(diamonds, aes(x = price, y = cut)) +
geom_density_ridges(scale = 4)
##Draw Area
ggplot(data,aes(x=country,y = stars))+geom_density_ridges()
##Draw Area
ggplot(data,aes(x=country,y=stars))+geom_density_ridges(scale=4)
ggplot(diamonds, aes(price,cut))+geom_density_ridges()
ggplot(diamonds, aes(x = price, y = cut)) +
geom_density_ridges(scale = 4)
##Draw Area
ggplot(data,aes(country,stars))+geom_density_ridges(scale=4)
head(data)
ggplot(diamonds, aes(price,cut))+geom_density_ridges()
##Make Density Plot with Fill Color
ggplot(data,aes(country,stars))+geom_density(color="orange")
##Make Density Plot with Fill Color
ggplot(data,aes(stars))+geom_density(color="orange")
##Make Density Plot with Fill Color
ggplot(data,aes(stars))+geom_density(fill="orange")
##Make Density Plot with Fill Color
ggplot(data,aes(stars))+geom_density(fill="orange",alpha=1/2)
#Make Ridges
ggplot(diamonds, aes(price,cut))+geom_density_ridges()
ggplot(data, aes(stars,country))+geom_density_ridges()
ggplot(data, aes(stars,country))+geom_density_ridges(fill="orange",alpha=1/2)
ggplot(data, aes(stars,country))+theme_light()+
geom_density_ridges(fill="orange",alpha=1/2)
#Make Density Plot -----------------------------------------------------
##Draw Density
ggplot(data,aes(y=country,x=stars))+geom_density()
ggplot(data, aes(stars,country))+theme_light()+
geom_density_ridges(fill="orange",alpha=1/2)
#Make Ridges
ggplot(data, aes(stars,country))+theme_light()+
geom_density_ridges(fill="orange",alpha=1/2)
#Polygon Frequency ---------------------------------------------
##Draw Polygon Frequency
ggplot(data,aes(x=stars))+geom_freqpoly()
#Polygon Frequency ---------------------------------------------
##Draw Polygon Frequency
ggplot(data,aes(x=stars))+geom_freqpoly()+geom_histogram()
#Polygon Frequency ---------------------------------------------
##Draw Polygon Frequency
ggplot(data,aes(x=stars))+geom_histogram()+geom_freqpoly(color="orange")
#Polygon Frequency ---------------------------------------------
##Draw Polygon Frequency
ggplot(data,aes(x=stars))+geom_histogram(alpha=1/2)+geom_freqpoly(color="orange")
#Polygon Frequency ---------------------------------------------
##Draw Polygon Frequency
ggplot(data,aes(x=stars))+geom_histogram(alpha=1/2)+geom_freqpoly(color="orange")+
theme_light()
##Combine with Histogram
ggplot(data,aes(x=stars))+geom_histogram(alpha=1/2)+
geom_freqpoly(color="blac")+theme_light()
##Combine with Histogram
ggplot(data,aes(x=stars))+geom_histogram(alpha=1/2)+
geom_freqpoly(color="black")+theme_light()
##Combine with Histogram
ggplot(data,aes(x=stars))+geom_histogram(alpha=1/2)+
geom_freqpoly(color="orange",width=2)+theme_light()
##Combine with Histogram
ggplot(data,aes(x=stars))+geom_histogram(alpha=1/2)+
geom_freqpoly(color="orange",size=2)+theme_light()
##Combine with Histogram
ggplot(data,aes(x=stars))+geom_histogram(alpha=1/2)+
geom_freqpoly(color="orange",size=1)+theme_light()
##Combine with Histogram
ggplot(data,aes(x=stars))+geom_histogram(alpha=1/2)+
geom_freqpoly(color="orange",size=1.5)+theme_light()
##Draw Bar Chart
ggplot(data_country,aes(country,jumlah))+geom_col()+coord_flip()+
scale_color_viridis_c()
##Draw Bar Chart
ggplot(data_country,aes(country,jumlah,fill=country))+geom_col()+coord_flip()+
scale_fill_viridis_c()
##Draw Bar Chart
ggplot(data_country,aes(country,jumlah,fill=jumlah))+geom_col()+coord_flip()+
scale_fill_viridis_c()
##Order data by jumlah
data_country <- data_country[order(data_country$jumlah),]
data_country$country <- factor(x = data_country$country,levels = data_country$country)
##Draw Bar Chart
ggplot(data_country,aes(country,jumlah,fill=jumlah))+geom_col()+coord_flip()+
scale_fill_viridis_c()
##Order data by rating
data_country <- data_country[order(data_country$rating),]
data_country$country <- factor(x = data_country$country,levels = data_country$country)
##Draw Bar Chart with Color
ggplot(data_country,aes(country,rating,fill=rating))+geom_col()+coord_flip()+
scale_fill_viridis_c()
write.csv(ramen,"D:/R/datasets/Ramen.csv")
summary(data)
head(data)
data
print(data)
tibble(data)
nrow(data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggrepel)
library(ggridges)
data <- read.csv("D:/R/datasets/ramen.csv")
data <- na.omit(data)
tibble(data)
data_country <- data %>% group_by(country) %>%
summarise(jumlah = n(), rating = mean(stars))
data_country <- data_country[order(data_country$jumlah),]
data_country$country <- factor(data_country$country,data_country$country)
ggplot(data_country,aes(country,jumlah,fill=jumlah))+
geom_col()+coord_flip()+
labs(subtitle = "Japan of course, is where you can find many varieties of ramen")
data_country <- data %>% group_by(country) %>%
summarise(jumlah = n(), rating = mean(stars))
data_country <- data_country[order(data_country$rating),]
data_country$country <- factor(data_country$country,data_country$country)
ggplot(data_country,aes(country,jumlah,fill=jumlah))+
geom_col()+coord_flip()+theme_light()+
labs(subtitle = "Japan of course, is where you can find most of the varieties of ramen",y = "number of ramen varieties")+
scale_fill_viridis_c()
data_country <- data %>% group_by(country) %>%
summarise(jumlah = n(), rating = mean(stars))
data_country <- data_country[order(data_country$rating),]
data_country$country <- factor(data_country$country,data_country$country)
ggplot(data_country,aes(country,rating,fill=rating))+
geom_col()+coord_flip()+theme_light()+
labs(subtitle = "Japan of course, is where you can find most of the varieties of ramen",y = "number of ramen varieties")+
scale_fill_viridis_c()
top_brand <- data %>% group_by(brand) %>%
summarise(min = min(stars, na.rm = T),max = max(stars, na.rm = T),
mean = mean(stars, na.rm = T), sd = sd(stars, na.rm = T),
se = sd/sqrt(n()), CI = se*1.96,
variety = length(unique(variety)),jumlah = n())
top_brand <- top_brand[order(top_brand$mean),]
top_brand$brand <- factor(top_brand$brand,levels = top_brand$brand)
top_brand <- top_brand %>% mutate(lower = mean-CI, upper = mean+CI,
diff = mean-mean(top_brand$mean))
ggplot(top_brand)+theme_light()+
geom_errorbar(aes(ymin=lower,ymax=upper,x=brand),width= 0.2)+
geom_hline(aes(yintercept = mean(top_brand$mean)), linetype = "dashed")+
geom_point(aes(y=mean,x=brand,color = variety), size = 2)+
theme(panel.grid = element_blank(),
axis.text = element_text(colour = "black"))+
labs(title = "Top Ramen Rating by Brand",
y = "Rating", x = "Brand",
subtitle = "Ramen with more than 30 reviews",
caption = "data: theramenrater.com",
color="variety")+scale_color_viridis_c()+coord_flip()+
geom_label_repel(aes(brand,mean, label = round(mean,2)), size = 3,
box.padding = unit(0.25, "lines"),
point.padding = unit(0.5, "lines"),
fill = "white")
#categorized data by brand
top_brand <- data %>% group_by(brand) %>%
summarise(min = min(stars, na.rm = T),max = max(stars, na.rm = T),
mean = mean(stars, na.rm = T), sd = sd(stars, na.rm = T),
se = sd/sqrt(n()), CI = se*1.96,
variety = length(unique(variety)),jumlah = n())
top_brand <- top_brand[order(top_brand$mean),]
top_brand <- top_brand %>% filter(jumlah > 30)
top_brand$brand <- factor(top_brand$brand,levels = top_brand$brand)
top_brand <- top_brand %>% mutate(lower = mean-CI, upper = mean+CI,
diff = mean-mean(top_brand$mean))
#plot
##top ramen by brand with confidence interval 95%
ggplot(top_brand)+theme_light()+
geom_errorbar(aes(ymin=lower,ymax=upper,x=brand),width= 0.2)+
geom_hline(aes(yintercept = mean(top_brand$mean)), linetype = "dashed")+
geom_point(aes(y=mean,x=brand,color = variety), size = 2)+
theme(panel.grid = element_blank(),
axis.text = element_text(colour = "black"))+
labs(title = "Top Ramen Rating by Brand",
y = "Rating", x = "Brand",
subtitle = "Ramen with more than 30 reviews",
caption = "data: theramenrater.com",
color="variety")+scale_color_viridis_c()+coord_flip()+
geom_label_repel(aes(brand,mean, label = round(mean,2)), size = 3,
box.padding = unit(0.25, "lines"),
point.padding = unit(0.5, "lines"),
fill = "white")
top_brand <- data %>% group_by(brand) %>%
summarise(min = min(stars, na.rm = T),max = max(stars, na.rm = T),
mean = mean(stars, na.rm = T), sd = sd(stars, na.rm = T),
se = sd/sqrt(n()), CI = se*1.96,
variety = length(unique(variety)),jumlah = n())
top_brand <- top_brand[order(top_brand$mean),]
top_brand <- top_brand[(nrow(top_brand-19):nrow(top_brand)),]
top_brand$brand <- factor(top_brand$brand,levels = top_brand$brand)
top_brand <- top_brand %>% mutate(lower = mean-CI, upper = mean+CI,
diff = mean-mean(top_brand$mean))
ggplot(top_brand)+theme_light()+
geom_errorbar(aes(ymin=lower,ymax=upper,x=brand),width= 0.2)+
geom_hline(aes(yintercept = mean(top_brand$mean)), linetype = "dashed")+
geom_point(aes(y=mean,x=brand,color = variety), size = 2)+
theme(panel.grid = element_blank(),
axis.text = element_text(colour = "black"))+
labs(title = "Top Ramen Rating by Brand",
y = "Rating", x = "Brand",
subtitle = "Ramen with more than 30 reviews",
caption = "data: theramenrater.com",
color="variety")+scale_color_viridis_c()+coord_flip()+
geom_label_repel(aes(brand,mean, label = round(mean,2)), size = 3,
box.padding = unit(0.25, "lines"),
point.padding = unit(0.5, "lines"),
fill = "white")
top_brand <- data %>% group_by(brand) %>%
summarise(min = min(stars, na.rm = T),max = max(stars, na.rm = T),
mean = mean(stars, na.rm = T), sd = sd(stars, na.rm = T),
se = sd/sqrt(n()), CI = se*1.96,
variety = length(unique(variety)),jumlah = n())
top_brand <- top_brand[order(top_brand$mean),]
top_brand <- top_brand[(nrow(top_brand-19):nrow(top_brand)),]
top_brand <- top_brand[(nrow(top_brand)-19):nrow(top_brand),]
top_brand
top_brand <- data %>% group_by(brand) %>%
summarise(min = min(stars, na.rm = T),max = max(stars, na.rm = T),
mean = mean(stars, na.rm = T), sd = sd(stars, na.rm = T),
se = sd/sqrt(n()), CI = se*1.96,
variety = length(unique(variety)),jumlah = n())
top_brand <- top_brand[order(top_brand$mean),]
top_brand
top_brand1 <- top_brand[(nrow(top_brand)-19):nrow(top_brand),]
top_brand1
tail(top_brand)
top_brand <- top_brand %>% filter(jumlah > 1)
top_brand <- top_brand[order(top_brand$mean),]
top_brand
tail(top_brand)
top_brand <- data %>% group_by(brand) %>%
summarise(min = min(stars, na.rm = T),max = max(stars, na.rm = T),
mean = mean(stars, na.rm = T), sd = sd(stars, na.rm = T),
se = sd/sqrt(n()), CI = se*1.96,
variety = length(unique(variety)),jumlah = n())
top_brand <- top_brand[order(top_brand$mean),]
top_brand <- top_brand %>% filter(jumlah > 30)
top_brand$brand <- factor(top_brand$brand,levels = top_brand$brand)
top_brand <- top_brand %>% mutate(lower = mean-CI, upper = mean+CI,
diff = mean-mean(top_brand$mean))
ggplot(top_brand)+theme_light()+
geom_errorbar(aes(ymin=lower,ymax=upper,x=brand),width= 0.2)+
geom_hline(aes(yintercept = mean(top_brand$mean)), linetype = "dashed")+
geom_point(aes(y=mean,x=brand,color = variety), size = 2)+
theme(panel.grid = element_blank(),
axis.text = element_text(colour = "black"))+
labs(title = "Top Ramen Rating by Brand",
y = "Rating", x = "Brand",
subtitle = "Ramen with more than 30 reviews",
caption = "data: theramenrater.com",
color="variety")+scale_color_viridis_c()+coord_flip()+
geom_label_repel(aes(brand,mean, label = round(mean,2)), size = 3,
box.padding = unit(0.25, "lines"),
point.padding = unit(0.5, "lines"),
fill = "white")
top_brand <- data %>% group_by(brand) %>%
summarise(min = min(stars, na.rm = T),max = max(stars, na.rm = T),
mean = mean(stars, na.rm = T), sd = sd(stars, na.rm = T),
se = sd/sqrt(n()), CI = se*1.96,
variety = length(unique(variety)),jumlah = n())
top_brand <- top_brand[order(top_brand$mean),]
top_brand <- top_brand %>% filter(jumlah > 30)
top_brand$brand <- factor(top_brand$brand,levels = top_brand$brand)
top_brand <- top_brand %>% mutate(lower = mean-CI, upper = mean+CI,
diff = mean-mean(top_brand$mean))
ggplot(top_brand)+theme_light()+
geom_errorbar(aes(ymin=lower,ymax=upper,x=brand),width= 0.2)+
geom_hline(aes(yintercept = mean(top_brand$mean)), linetype = "dashed")+
geom_point(aes(y=mean,x=brand,color = variety), size = 2)+
theme(panel.grid = element_blank(),
axis.text = element_text(colour = "black"))+
labs(y = "Rating", x = "Brand",
subtitle = "Ramen with more than 30 reviews, Nissin is the most varied ramen",
caption = "data: theramenrater.com",
color="variety")+scale_color_viridis_c()+coord_flip()+
geom_label_repel(aes(brand,mean, label = round(mean,2)), size = 3,
box.padding = unit(0.25, "lines"),
point.padding = unit(0.5, "lines"),direction = "x",
fill = "white")
brando
#rating as size and color scale
brando <- data %>% group_by(brand,style) %>%
summarise(rating = mean(stars), jumlah = n())
brando
#Distribution of rating on brand
lebih_brand <- data %>% group_by(country,brand, variety, style) %>%
summarise(jumlah = n(), rating = mean(stars))
lebih_brand <- lebih_brand[lebih_brand$brand %in% top_brand$brand,]
lebih_brand$brand <- factor(lebih_brand$brand, levels = top_brand$brand)
lebih_brand
ggplot(lebih_brand, aes(stars,brand))+geom_density_ridges()
ggplot(lebih_brand, aes(rating,brand))+geom_density_ridges()
ggplot(lebih_brand, aes(rating,brand,fill=rating))+geom_density_ridges()+
scale_fill_viridis_c()
ggplot(lebih_brand, aes(rating,brand,color=rating))+geom_density_ridges()+
scale_color_viridis_c()
ggplot(lebih_brand, aes(rating,brand,fill=rating))+geom_density_ridges()+
scale_fill_cyclical(values = 3)
ggplot(lebih_brand, aes(rating,brand,fill=rating))+geom_density_ridges()+
scale_fill_cyclical(values = rating)
ggplot(lebih_brand, aes(rating,brand,fill=rating))+geom_density_ridges()+
scale_fill_cyclical(values = lebih_brand$rating)
ggplot(lebih_brand, aes(rating,brand),fill="lightblue")+geom_density_ridges()+
ggplot(lebih_brand, aes(rating,brand),fill="lightblue")+geom_density_ridges()
ggplot(lebih_brand, aes(rating,brand),fill="lightblue")+geom_density_ridges()
ggplot(lebih_brand, aes(rating,brand))+geom_density_ridges(fill="lightblue")
ggplot(lebih_brand, aes(rating,brand))+
geom_density_ridges(fill="lightblue",alpha=1/2)+
theme_ridges()
lebih_brand <- data %>% group_by(country,brand, variety, style) %>%
summarise(jumlah = n(), rating = mean(stars))
lebih_brand <- lebih_brand[lebih_brand$brand %in% top_brand$brand,]
lebih_brand$brand <- factor(lebih_brand$brand, levels = top_brand$brand)
lebih_brand$style <- factor(lebih_brand$style,levels = mantap$style)
lebih_brand <- data %>% group_by(country,brand, variety, style) %>%
summarise(jumlah = n(), rating = mean(stars))
lebih_brand <- lebih_brand[lebih_brand$brand %in% top_brand$brand,]
lebih_brand$brand <- factor(lebih_brand$brand, levels = top_brand$brand)
ggplot(lebih_brand, aes(rating,brand))+
geom_density_ridges(fill="lightblue",alpha=1/2)+
theme_ridges()
ggplot(lebih_brand, aes(rating,brand,fill=rating))+
geom_density_ridges(alpha=1/2)+
theme_ridges()
ggplot(lebih_brand, aes(rating,brand,fill=rating))+
geom_col()
ggplot(lebih_brand, aes(rating,brand,fill=rating))+
geom_density_ridges(alpha=1/2)+
theme_ridges()
ggplot(lebih_brand, aes(rating,brand,fill=rating))+
geom_density_ridges(alpha=1/2)+
scale_fill_cyclical(
breaks = c("1980 Indy", "1980 Unionist"),
labels = c(`1980 Indy` = "Indy", `1980 Unionist` = "Unionist"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
)
ggplot(lebih_brand, aes(rating,brand,fill=rating))+
geom_density_ridges(alpha=1/2)+
scale_fill_viridis_c()
ggplot(lebih_brand, aes(rating,brand))+
geom_density_ridges(aes(fill=rating),alpha=1/2)+
scale_fill_viridis_c()
ggplot(lebih_brand, aes(rating,brand))+
geom_density_ridges(aes(fill=rating),alpha=1/2)+
scale_fill_viridis_d()
ggplot(lebih_brand, aes(rating,brand))+
geom_density_ridges_gradient(aes(fill=rating),alpha=1/2)+
scale_fill_viridis()
ggplot(lebih_brand, aes(rating,brand))+
geom_density_ridges_gradient(aes(fill=rating),alpha=1/2)+
scale_fill_viridis_c()
ggplot(lebih_brand, aes(rating,brand))+
geom_density_ridges(aes(fill=rating),alpha=1/2)
ggplot(lebih_brand, aes(rating,brand))+
geom_density_ridges(aes(fill=rating),alpha=1/2,fill="orange")
ggplot(lebih_brand, aes(rating,brand))+
geom_density_ridges(aes(fill=brand),alpha=1/2,fill="orange")
ggplot(lebih_brand, aes(rating,brand,fill=brand))+
geom_density_ridges(alpha=1/2)
ggplot(lebih_brand, aes(rating,brand,fill=brand))+
geom_density_ridges(alpha=1)
ggplot(lebih_brand, aes(rating,brand,fill=brand))+
geom_density_ridges(alpha=1/2)+
scale_fill_brewer(guide=F)
ggplot(lebih_brand, aes(rating,brand,fill=brand))+
geom_density_ridges(alpha=1/2)+
scale_fill_gradient(guide=F)
ggplot(lebih_brand, aes(rating,brand,fill=brand))+
geom_density_ridges(alpha=1/2)+
scale_fill_discrete(guide=F)
ggplot(lebih_brand, aes(rating,brand,fill=brand))+
geom_density_ridges(alpha=1/2)+
scale_fill_discrete(guide=F)+
theme_ridges()
#ggridges
png("ramen15.png", width = 3840, height = 2160, units = 'px', res = 300)
ggplot(lebih_brand, aes(rating,brand,fill=brand))+
geom_density_ridges(alpha=1/2)+
scale_fill_discrete(guide=F)+
theme_ridges()
dev.off()
